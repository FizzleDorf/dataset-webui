[DatasetInfo]
;; The name of your dataset - used when saving to create a folder.
Name = 
;; A description of your dataset - not used anywhere, keep notes here.
Description = 

[Tags]
;; Activate tagging rules by filling out the fields below.
;;
;; Leave them empty to disable them:
;;   SomeFilter = 
;;
;; To list multiple tags, separate them with a comma like you would in the webui:
;;   SomeFilter = masterpiece, 1girl, solo
;;
;; Some of these options can be used multiple times
;; to do this, just name them differently by adding a dot and then a name:
;;   SomeFilter = masterpiece, 1girl
;;   SomeFilter.other = masterpiece, solo
;;   SomeFilter.third = masterpiece, solo focus

;; Input folder
;; This is where your images and txt files containing tags should be.
;; Default setting:
;;   InputFolder = 3 - tagged
InputFolder = 3 - tagged

;; Output folder used for tag filtering
;; This is where the script will save the modified txt files
;; You also have the option to copy your images here in the final step.
;; Default setting:
;;   InputFolder = 4 - fixed
OutputFolder = 4 - fixed

;; Your LoRa triggerword.
;; It will be added to all images in position 1.
;; Leave empty to not add a triggerword.
;; Example Usage:
;;   Triggerword = htfam
Triggerword = 

;; Secondary triggerwords.
;; Move these tags to the front of the tag list.
;; Useful for "shuffle_tokens" and "keep_tokens" training options.
;; If you have an outfit tag or second triggerword you can add it
;; here to make sure it doesn't get shuffled.
;; Don't add your main Triggerword here, it is already the first tag by default.
;; Example Usage:
;;   RaisedTags = MikoStyle2019, office lady
RaisedTags = 

;; These tags will never be removed by any of the filters.
;; Example Usage:
;;   Whitelist = headband, big ears
Whitelist = 

;; Always remove these tags from all images
;; Example Usage:
;;   Blacklist = female focus, male focus,
;; Default setting:
;;   Blacklist = blurry, motion blur, chromatic aberration 								   
Blacklist = blurry, motion blur, chromatic aberration 

;; Remove artist / character / copyright / meta tags - only keep general tags.
;; This is recommended. If you don't use it, increase the limit for PopularOnly.
;; Default setting:
;;   GeneralTagsOnly = True
GeneralTagsOnly = True

;; Tag source. can be either gelbooru or danbooru
;; gelbooru is similar and is easy to dump tags from
;; Default setting:
;;   TagSource = gelbooru
TagSource = gelbooru

;; Only keep the most popular tags, removing the more obscure ones.
;; Anything less popular (unless whitelisted) will be removed.
;; Setting this to 500 would only keep the 500 most popular tags.
;; Setting this to 10000 would keep a total of 10000 tags.
;; Increase to ~10000 when using GeneralTagsOnly = False.
;; Default setting:
;;   PopularOnly = 2500
PopularOnly = 2500

;; Only keep tags that appear at least on N of the tagged images.
;; If a tag appears less than the number specified here, it gets removed.
;; This can be useful to filter out random junk from the autotagger.
;; Settings this to 5 would cause the tag "jungle" that only appears 
;; on 3 images to be removed from all 3 images.
;; Default setting:
;;   FrequentOnly = 2
FrequentOnly = 2

;; Normalize eye color.
;; This replaces all existing eye color tags with your given tag(s).
;; If at least one eye color tag is present, your list of tags will be added.
;; This is usually safe to use. It only applies to color tags.
;; Example Usage:
;;   EyeColor = brown eyes
;;   EyeColor = heterochromia, green eyes, blue eyes,
EyeColor = 

;; Normalize hair color.
;; This replaces all hair color tags with your given tag(s).
;; This is usually safe to use, but might cause issues with
;; 'streaked hair' or 'multicolored hair' etc. unless also specified
;; Example Usage:
;;   HairColor = brown hair
;;   HairColor = pink hair, brown hair
HairColor = 

;; Normalize hair length/style.
;; This replaces all other hair tags with your given tag(s).
;; This can cause issues if your characters hairstyle appears to "change" based 
;; on the viewing angle (eg. can't see single braid in portrait photo).
;; Example Usage:
;;   HairStyle = long hair, single braid, hair ornament
HairStyle = 

;; Folder tags [supports multiple rules]
;; Add or remove tags based on the folder name.
;; This is useful if you have sorted your images by outfit
;; The first value is your folder name, put your tag(s) after it
;; If you're adding it to add more triggerwords, make sure to add 
;; them to the RaisedTags function as well.
;; Example Usage:
;;   AddFolder.example: 2_miko_outfit, red hakama, hakama skirt, miko
;;   RemoveFolder.example: 2_miko_outfit, red hakama, hakama skirt, miko
AddFolder = 
RemoveFolder = 

;; Custom tag transitivity rules. [supports multiple rules]
;; The FIRST tag will be your source tag.
;; Any image that has this tag will also get the subsequent tags in the list added.
;; This example would add "red hakama" and "hakama skirt" to all images tagged with "miko":
;; Example Usage:
;;   AddRule.example = miko, red hakama, hakama skirt
AddRule = 

;; Custom tag replacement rules [supports multiple rules]
;; Useful for replacing redundant tags.
;; The FIRST tag will be the one that is kept.
;; This example would replace "bell" and "jingle bell" with "neck bell":
;; Example Usage:
;;   ReplaceRule.example = neck bell, bell, jingle bell
ReplaceRule = 

;; Add/Remove tags randomly [supports multiple rules]
;; This feature is experimental.
;; It is a percetege (15% -> 0.15) followed by a list of tags.
;; The tags in the list will be randomly added to/removed from your images.
;; It is only useful for huge datasets.
;; You can use it to de-emphasize some frequent tags like solo or to mix
;; some physical attributes like hair colors;
;; Example Usage:
;;   AddSpice.example = 0.10, detailed eyes
;;   RemoveSpice.example = 0.20, solo, 1girl
AddSpice = 
RemoveSpice = 

;; Remove images by tag.
;; If an image has ANY of the tags in this list, it won't be saved to the OutputFolder.
;; This is a pre-filter, meaning all images with this tag are removed
;; *before* any tags are updated/removed. It's also not affected by the whitelist.
;; FixUnderscores is still applied, so don't use underscores here either.
;; Example Usage:
;;   ImageBlacklistTags = head out of frame, close-up, multiple girls,
ImageBlacklistTags = 

;; Remove images by tag combination. [supports multiple rules]
;; If an image has ALL of the tags in this list, it WON'T be saved to the OutputFolder.
;; This is a pre-filter, meaning all images with this tag are removed
;; *before* any tags are updated/removed. It's also not affected by the whitelist.
;; FixUnderscores is still applied, so don't use underscores here either.
;; Example Usage:
;;   ImageBlacklistFilter.example = 1boy, 1girl
ImageBlacklistFilter = 

;; Categorize images by tags. [supports multiple rules]
;; This will create extra folders in your OutputFolder for each tag you list here.
;; One image can only belong to one category, so the first match will be used.
;; This is useful if you have multiple characters/concepts tagged but not sorted.
;; You might be able to get away with sorting your characters by hair color.
;; Anything not matches by this filter will still go in the same category as the input.
;; note: "repeats" will be set to 1 for your new folder, change this as needed!
;; Example Usage:
;;   ImageCategories.example = blue hair, pink hair
;;   ImageCategories.example2 = character name, character2 name
ImageCategories = 

;; Underscore Fix.
;; If your tagging program/scraper outputs underscores in tags, set this to
;; true (unless you want your output to keep using underscores).
;; This is applied BEFORE the rules, so make sure to write your rules using spaces.
;; Default setting:
;;   FixUnderscores = True
FixUnderscores = True

;; Debug: print the added/removed tags on each step.
;; It makes the output hard to read but can be useful for testing your rules.
;; It also makes the script quit immediately instead of requiring user input.
;; Default setting:
;;   Debug = False
Debug = False